{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst paypalUrl = 'http://localhost:8082/paypal/';\nconst reqHeader = new HttpHeaders({\n  'Content-Type': 'application/json',\n  Authentication: 'Bearer ' + JSON.parse(localStorage.getItem('token'))\n});\nexport let PaymentServiceService = /*#__PURE__*/(() => {\n  class PaymentServiceService {\n    constructor(httpPayment) {\n      this.httpPayment = httpPayment;\n    }\n    makePayment(paymentOrder) {\n      const url = paypalUrl + 'make/payment';\n      // @ts-ignore\n      return this.httpPayment.post(url, paymentOrder, {\n        headers: reqHeader,\n        responseType: 'text'\n      });\n      /* return this.httpPayment.post(url, { paymentOrder }, {headers: reqHeader, responseType: 'text'})\r\n         .subscribe((paymentDetails: any) => {\r\n           // Initiate the PayPal payment\r\n           this.paypal.Buttons({\r\n             createOrder: (data, actions) => {\r\n               return actions.order.create({\r\n                 purchase_units: [{\r\n                   amount: {\r\n                     value: paymentOrder.package_price\r\n                   }\r\n                 }]\r\n               });\r\n             },\r\n             onApprove: (data, actions) => {\r\n               // Handle the approved payment\r\n               // ...\r\n             }\r\n           }).render('#paypal-button-container');\r\n         }); */\n    }\n\n    cancelPayment() {\n      const url = paypalUrl + 'cancel/payment';\n    }\n  }\n  PaymentServiceService.ɵfac = function PaymentServiceService_Factory(t) {\n    return new (t || PaymentServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PaymentServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaymentServiceService,\n    factory: PaymentServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaymentServiceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}