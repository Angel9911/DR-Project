{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst chatbotUrl = 'http://localhost:8082/chatbot/dialogflow/';\nconst reqHeader = new HttpHeaders({\n  'Content-Type': 'application/json',\n  Authentication: 'Bearer ' + JSON.parse(localStorage.getItem('token'))\n});\nexport let ChatbotServiceService = /*#__PURE__*/(() => {\n  class ChatbotServiceService {\n    constructor(httpChatBot) {\n      _defineProperty(this, \"httpChatBot\", void 0);\n      this.httpChatBot = httpChatBot;\n    }\n    getSessionId() {\n      const reqHeader2 = new HttpHeaders({\n        'Content-Type': 'application/text',\n        Authentication: 'Bearer ' + JSON.parse(localStorage.getItem('token'))\n      });\n      const url = chatbotUrl + 'sessionId';\n      // @ts-ignore\n      return this.httpChatBot.get(url, {\n        responseType: 'text',\n        headers: reqHeader2\n      });\n    }\n    sendMessage(text, sessionId) {\n      const url = chatbotUrl + 'send/message/' + sessionId;\n      const body = {\n        text\n      };\n      console.log(text);\n      return this.httpChatBot.post(url, {\n        message: text\n      }, {\n        headers: reqHeader\n      });\n    }\n  }\n  _defineProperty(ChatbotServiceService, \"\\u0275fac\", function ChatbotServiceService_Factory(t) {\n    return new (t || ChatbotServiceService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(ChatbotServiceService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatbotServiceService,\n    factory: ChatbotServiceService.ɵfac,\n    providedIn: 'root'\n  }));\n  return ChatbotServiceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}