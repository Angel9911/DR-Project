{"ast":null,"code":"import { __decorate, __metadata, __spreadArray } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./list-users.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./list-users.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpAdiministratorService } from '../../../../service/administrator/http-adiministrator.service';\nimport { DataService } from '../../../../service/data.service';\nimport { FormControl } from '@angular/forms';\nimport { DecimalPipe } from '@angular/common';\nimport { map, startWith } from 'rxjs/operators';\nimport { ConfirmDialogService } from '../../../../service/confirm-dialog.service';\n// @ts-ignore\nvar users;\n// tslint:disable-next-line:label-position no-unused-expression\nfunction search(text, pipe) {\n  return users.filter(function (user) {\n    console.log(user);\n    var term = text.toLowerCase();\n    return user.name.toLowerCase().includes(term) || user.last_name.toLowerCase().includes(term) || user.phone.toLowerCase().includes(term);\n  });\n}\nvar ListUsersComponent = /** @class */function () {\n  // tslint:disable-next-line:max-line-length\n  function ListUsersComponent(router, apiService, dataService, pipe, confirmService) {\n    var _this = this;\n    this.router = router;\n    this.apiService = apiService;\n    this.dataService = dataService;\n    this.pipe = pipe;\n    this.confirmService = confirmService;\n    this.filter = new FormControl('');\n    this.apiService.getUsers().subscribe(function (data) {\n      // @ts-ignore\n      users = __spreadArray([], data, true);\n      console.log(users);\n      // this.users = data;\n      _this.result$ = _this.filter.valueChanges.pipe(startWith(''), map(function (text) {\n        return search(text, pipe);\n      }));\n    });\n  }\n  ListUsersComponent.prototype.ngOnInit = function () {\n    /*if (!window.localStorage.getItem('token')) {\r\n      this.router.navigate(['login']);\r\n      return;\r\n    }\r\n     this.apiService.getUsers()\r\n      .subscribe( data => {\r\n         this.users = data;\r\n      }); */\n  };\n  ListUsersComponent.prototype.deleteUser = function (customer) {\n    var _this = this;\n    console.log(customer.user_id);\n    this.confirmService.confirm('Моля потвърдете', 'Искате ли да изтриете този потребител ?').then(function (confirmed) {\n      // tslint:disable-next-line:triple-equals\n      if (confirmed != false) {\n        _this.apiService.deleteUser(customer.user_id).subscribe(function (data) {\n          users = users.filter(function (u) {\n            return u !== customer;\n          });\n          window.location.reload();\n        });\n      }\n    }).catch(function () {\n      return console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)');\n    });\n    /* this.apiService.deleteUser(customer.user_account.username, customer.phone).subscribe( data => {\r\n      users = users.filter(u => u !== customer);\r\n    }); */\n    /* this.apiService.deleteUser(2)\r\n       .subscribe( data => {\r\n         this.users = this.users.filter(u => u !== customer);\r\n       }); */\n  };\n\n  ListUsersComponent.prototype.editUser = function (customer) {\n    // window.localStorage.removeItem('editUserId');\n    // window.localStorage.setItem('editUserId', customer.toString());\n    this.dataService.customer = customer;\n    this.router.navigate(['/administrator/edit-user']);\n  };\n  ListUsersComponent.prototype.addUser = function () {\n    this.router.navigate(['/administrator/add-user']);\n  };\n  ListUsersComponent.ctorParameters = function () {\n    return [{\n      type: Router\n    }, {\n      type: HttpAdiministratorService\n    }, {\n      type: DataService\n    }, {\n      type: DecimalPipe\n    }, {\n      type: ConfirmDialogService\n    }];\n  };\n  ListUsersComponent = __decorate([Component({\n    selector: 'app-list-users',\n    template: __NG_CLI_RESOURCE__0,\n    styles: [__NG_CLI_RESOURCE__1]\n  }), __metadata(\"design:paramtypes\", [Router, HttpAdiministratorService, DataService, DecimalPipe, ConfirmDialogService])], ListUsersComponent);\n  return ListUsersComponent;\n}();\nexport { ListUsersComponent };","map":{"version":3,"mappings":";;;AAAA,SAAQA,SAAS,QAA8B,eAAe;AAC9D,SAAQC,MAAM,QAAO,iBAAiB;AAGtC,SAAQC,yBAAyB,QAAO,+DAA+D;AACvG,SAAQC,WAAW,QAAO,kCAAkC;AAC5D,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,GAAG,EAAEC,SAAS,QAAO,gBAAgB;AAE7C,SAAQC,oBAAoB,QAAO,4CAA4C;AAC/E;AACA,IAAIC,KAAiB;AACrB;AAEA,SAASC,MAAMA,CAACC,IAAY,EAAEC,IAAmB;EAC/C,OAAOH,KAAK,CAACI,MAAM,CAAC,cAAI;IACtBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjB,IAAMC,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;IAC/B,OAAOF,IAAI,CAACG,IAAI,CAACD,WAAW,EAAE,CAACE,QAAQ,CAACH,IAAI,CAAC,IACxCD,IAAI,CAACK,SAAS,CAACH,WAAW,EAAE,CAACE,QAAQ,CAACH,IAAI,CAAC,IAC3CD,IAAI,CAACM,KAAK,CAACJ,WAAW,EAAE,CAACE,QAAQ,CAACH,IAAI,CAAC;EAC9C,CAAC,CAAC;AACJ;AAOA;EAKE;EACA,4BAAoBM,MAAc,EAAUC,UAAqC,EAAUC,WAAwB,EAAUb,IAAiB,EAAUc,cAAoC;IAA5L;IAAoB,WAAM,GAANH,MAAM;IAAkB,eAAU,GAAVC,UAAU;IAAqC,gBAAW,GAAXC,WAAW;IAAuB,SAAI,GAAJb,IAAI;IAAuB,mBAAc,GAAdc,cAAc;IALtK,WAAM,GAAG,IAAItB,WAAW,CAAC,EAAE,CAAC;IAM1B,IAAI,CAACoB,UAAU,CAACG,QAAQ,EAAE,CACvBC,SAAS,CAAE,cAAI;MACd;MACAnB,KAAK,qBAAOoB,IAAI,OAAC;MACjBf,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;MAClB;MACAqB,KAAI,CAACC,OAAO,GAAGD,KAAI,CAACjB,MAAM,CAACmB,YAAY,CAACpB,IAAI,CAC1CL,SAAS,CAAC,EAAE,CAAC,EACbD,GAAG,CAAC,cAAI;QAAI,aAAM,CAACK,IAAI,EAAEC,IAAI,CAAC;MAAlB,CAAkB,CAAC,CAChC;IACH,CAAC,CAAC;EACN;EAEAqB,qCAAQ,GAAR;IACE;;;;;;;;EAAA,CAQD;EAEDA,uCAAU,GAAV,UAAWC,QAAkB;IAA7B;IACEpB,OAAO,CAACC,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAAC;IAC7B,IAAI,CAACT,cAAc,CAACU,OAAO,CAAC,iBAAiB,EAAE,yCAAyC,CAAC,CACtFC,IAAI,CAAC,UAACC,SAAS;MACd;MACA,IAAIA,SAAS,IAAI,KAAK,EAAE;QACtBR,KAAI,CAACN,UAAU,CAACe,UAAU,CAACL,QAAQ,CAACC,OAAO,CAAC,CAACP,SAAS,CAAE,cAAI;UAC1DnB,KAAK,GAAGA,KAAK,CAACI,MAAM,CAAC,WAAC;YAAI,QAAC,KAAKqB,QAAQ;UAAd,CAAc,CAAC;UACzCM,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC1B,CAAC,CAAC;;IAEN,CAAC,CAAC,CACDC,KAAK,CAAC;MAAM,cAAO,CAAC5B,GAAG,CAAC,yGAAyG,CAAC;IAAtH,CAAsH,CAAC;IACtI;;;IAGD;;;;EAID,CAAC;;EAEDkB,qCAAQ,GAAR,UAASC,QAAkB;IAC1B;IACA;IACE,IAAI,CAACT,WAAW,CAACS,QAAQ,GAAGA,QAAQ;IACpC,IAAI,CAACX,MAAM,CAACqB,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC;EACrD,CAAC;EAEDX,oCAAO,GAAP;IACE,IAAI,CAACV,MAAM,CAACqB,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC;EACnD,CAAC;;;;;;;;;;;;;;EA9DUX,kBAAkB,eAL9BjC,SAAS,CAAC;IACT6C,QAAQ,EAAE,gBAAgB;IAC1BC,8BAA0C;;GAE3C,CAAC,mCAO4B7C,MAAM,EAAsBC,yBAAyB,EAAuBC,WAAW,EAAgBE,WAAW,EAA0BG,oBAAoB,KANjLyB,kBAAkB,CA+D9B;EAAD,yBAAC;CAAA,CApED;SAKaA,kBAAkB","names":["Component","Router","HttpAdiministratorService","DataService","FormControl","DecimalPipe","map","startWith","ConfirmDialogService","users","search","text","pipe","filter","console","log","user","term","toLowerCase","name","includes","last_name","phone","router","apiService","dataService","confirmService","getUsers","subscribe","data","_this","result$","valueChanges","ListUsersComponent","customer","user_id","confirm","then","confirmed","deleteUser","window","location","reload","catch","navigate","selector","template"],"sourceRoot":"","sources":["E:\\Programs\\SpringAngularProject\\angular7-springboot-crud-tutorial-master\\update-version\\angular7-spring-boot-master\\src\\app\\administrator\\layout-adiministrator\\users\\list-users\\list-users.component.ts"],"sourcesContent":["import {Component, OnInit, PipeTransform} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {HttpClientService} from '../../../../service/customer/http-client.service';\nimport {Customer} from '../../../../models/user';\nimport {HttpAdiministratorService} from '../../../../service/administrator/http-adiministrator.service';\nimport {DataService} from '../../../../service/data.service';\nimport {FormControl} from '@angular/forms';\nimport {DecimalPipe} from '@angular/common';\nimport {map, startWith} from 'rxjs/operators';\nimport {from, Observable, of} from 'rxjs';\nimport {ConfirmDialogService} from '../../../../service/confirm-dialog.service';\n// @ts-ignore\nlet users: Customer[];\n// tslint:disable-next-line:label-position no-unused-expression\n\nfunction search(text: string, pipe: PipeTransform): Customer[] {\n  return users.filter(user => {\n    console.log(user);\n    const term = text.toLowerCase();\n    return user.name.toLowerCase().includes(term)\n      || user.last_name.toLowerCase().includes(term)\n      || user.phone.toLowerCase().includes(term);\n  });\n}\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent implements OnInit {\n  filter = new FormControl('');\n // users: Customer[];\n  result$: Observable<Customer[]>;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private router: Router, private apiService: HttpAdiministratorService, private dataService: DataService, private pipe: DecimalPipe, private confirmService: ConfirmDialogService) {\n    this.apiService.getUsers()\n      .subscribe( data => {\n        // @ts-ignore\n        users = [...data];\n        console.log(users);\n        // this.users = data;\n        this.result$ = this.filter.valueChanges.pipe(\n          startWith(''),\n          map(text => search(text, pipe))\n        );\n      });\n  }\n\n  ngOnInit() {\n    /*if (!window.localStorage.getItem('token')) {\n      this.router.navigate(['login']);\n      return;\n    }\n     this.apiService.getUsers()\n      .subscribe( data => {\n         this.users = data;\n      }); */\n  }\n\n  deleteUser(customer: Customer): void {\n    console.log(customer.user_id);\n    this.confirmService.confirm('Моля потвърдете', 'Искате ли да изтриете този потребител ?')\n      .then((confirmed) => {\n        // tslint:disable-next-line:triple-equals\n        if (confirmed != false) {\n          this.apiService.deleteUser(customer.user_id).subscribe( data => {\n            users = users.filter(u => u !== customer);\n            window.location.reload();\n          });\n        }\n      })\n      .catch(() => console.log('User dismissed the dialog (e.g., by using ESC, clicking the cross icon, or clicking outside the dialog)'));\n    /* this.apiService.deleteUser(customer.user_account.username, customer.phone).subscribe( data => {\n      users = users.filter(u => u !== customer);\n    }); */\n   /* this.apiService.deleteUser(2)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== customer);\n      }); */\n  }\n\n  editUser(customer: Customer): void {\n   // window.localStorage.removeItem('editUserId');\n   // window.localStorage.setItem('editUserId', customer.toString());\n     this.dataService.customer = customer;\n     this.router.navigate(['/administrator/edit-user']);\n  }\n\n  addUser(): void {\n    this.router.navigate(['/administrator/add-user']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}