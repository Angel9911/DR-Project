{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(authService) {\n      _defineProperty(this, \"authService\", void 0);\n      this.authService = authService;\n    }\n    intercept(req, next) {\n      let modifiedReq = req;\n      console.log(this.authService.getToken());\n      if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n        console.log('With Token --- ' + sessionStorage.getItem('token'));\n        modifiedReq = req.clone({\n          setHeaders: {\n            Authorization: this.authService.getToken()\n          }\n        });\n      }\n      return next.handle(modifiedReq);\n    }\n  }\n  _defineProperty(AuthInterceptorService, \"\\u0275fac\", function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  });\n  _defineProperty(AuthInterceptorService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  }));\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}