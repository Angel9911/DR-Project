{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Subject } from 'rxjs';\nimport { Alert, AlertType } from '../models/alert';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let AlertServiceService = /*#__PURE__*/(() => {\n  class AlertServiceService {\n    constructor() {\n      _defineProperty(this, \"subject\", new Subject());\n      _defineProperty(this, \"defaultId\", 'default-alert');\n    }\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId) {\n      return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n    success(message, options) {\n      this.alert(new Alert({\n        ...options,\n        type: AlertType.Success,\n        message\n      }));\n    }\n    error(message, options) {\n      this.alert(new Alert({\n        ...options,\n        type: AlertType.Error,\n        message\n      }));\n    }\n    alert(alert) {\n      alert.id = alert.id || this.defaultId;\n      this.subject.next(alert);\n    }\n    clear(id = this.defaultId) {\n      this.subject.next(new Alert({\n        id\n      }));\n    }\n  }\n  _defineProperty(AlertServiceService, \"\\u0275fac\", function AlertServiceService_Factory(t) {\n    return new (t || AlertServiceService)();\n  });\n  _defineProperty(AlertServiceService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertServiceService,\n    factory: AlertServiceService.ɵfac,\n    providedIn: 'root'\n  }));\n  return AlertServiceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}