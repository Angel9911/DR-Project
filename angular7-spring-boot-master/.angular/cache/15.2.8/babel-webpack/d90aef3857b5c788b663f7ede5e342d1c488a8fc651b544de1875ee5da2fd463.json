{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./edit-users.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./edit-users.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpAdiministratorService } from '../../../../service/administrator/http-adiministrator.service';\nimport { DataService } from '../../../../service/data.service';\nvar EditUsersComponent = /** @class */function () {\n  // tslint:disable-next-line:max-line-length\n  function EditUsersComponent(router, httpService, form, dataService) {\n    this.router = router;\n    this.httpService = httpService;\n    this.form = form;\n    this.dataService = dataService;\n    this.createForm();\n  }\n  EditUsersComponent.prototype.ngOnInit = function () {\n    //  console.log('user_account: ' + this.dataService.customer.name);\n    this.editForm.controls.name.setValue(this.dataService.customer.name);\n    this.editForm.controls.last_name.setValue(this.dataService.customer.last_name);\n    this.editForm.controls.phone.setValue(this.dataService.customer.phone);\n    this.editForm.controls.city.setValue(this.dataService.customer.city);\n    this.editForm.controls.address.setValue(this.dataService.customer.address);\n  };\n  Object.defineProperty(EditUsersComponent.prototype, \"name\", {\n    get: function () {\n      return this.editForm.get('name');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EditUsersComponent.prototype, \"last_name\", {\n    get: function () {\n      return this.editForm.get('last_name');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EditUsersComponent.prototype, \"phone\", {\n    get: function () {\n      return this.editForm.get('phone');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EditUsersComponent.prototype, \"city\", {\n    get: function () {\n      return this.editForm.get('city');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EditUsersComponent.prototype, \"address\", {\n    get: function () {\n      return this.editForm.get('address');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EditUsersComponent.prototype.updateCustomer = function () {\n    this.user.name = this.name.value;\n    this.user.last_name = this.last_name.value;\n    this.user.phone = this.phone.value;\n    // this.user.city = this.name.value;\n    this.user.address = this.address.value;\n    this.httpService.updateUser(this.user).subscribe(function (data) {\n      alert('User updated successfully');\n    });\n  };\n  EditUsersComponent.prototype.createForm = function () {\n    this.editForm = this.form.group({\n      name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      phone: ['', Validators.required],\n      city: ['', Validators.required],\n      address: ['', Validators.required]\n    });\n  };\n  EditUsersComponent.ctorParameters = function () {\n    return [{\n      type: Router\n    }, {\n      type: HttpAdiministratorService\n    }, {\n      type: FormBuilder\n    }, {\n      type: DataService\n    }];\n  };\n  EditUsersComponent = __decorate([Component({\n    selector: 'app-edit-users',\n    template: __NG_CLI_RESOURCE__0,\n    styles: [__NG_CLI_RESOURCE__1]\n  }), __metadata(\"design:paramtypes\", [Router, HttpAdiministratorService, FormBuilder, DataService])], EditUsersComponent);\n  return EditUsersComponent;\n}();\nexport { EditUsersComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAQC,WAAW,EAAaC,UAAU,QAAO,gBAAgB;AAEjE,SAAQC,MAAM,QAAO,iBAAiB;AACtC,SAAQC,yBAAyB,QAAO,+DAA+D;AACvG,SAAQC,WAAW,QAAO,kCAAkC;AAO5D;EAIE;EACA,4BAAoBC,MAAc,EAAUC,WAAsC,EAAUC,IAAiB,EAAUC,WAAwB;IAA3H,WAAM,GAANH,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAAqC,SAAI,GAAJC,IAAI;IAAuB,gBAAW,GAAXC,WAAW;IAChI,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,qCAAQ,GAAR;IACA;IACE,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACF,IAAI,CAAC;IACpE,IAAI,CAACF,QAAQ,CAACC,QAAQ,CAACI,SAAS,CAACF,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACC,SAAS,CAAC;IAC9E,IAAI,CAACL,QAAQ,CAACC,QAAQ,CAACK,KAAK,CAACH,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACE,KAAK,CAAC;IACtE,IAAI,CAACN,QAAQ,CAACC,QAAQ,CAACM,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACG,IAAI,CAAC;IACpE,IAAI,CAACP,QAAQ,CAACC,QAAQ,CAACO,OAAO,CAACL,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACO,QAAQ,CAACI,OAAO,CAAC;EAE5E,CAAC;EACDC,sBAAIV,oCAAI;SAAR;MACE,OAAO,IAAI,CAACC,QAAQ,CAACU,GAAG,CAAC,MAAM,CAAC;IAClC,CAAC;;;;EAEDD,sBAAIV,yCAAS;SAAb;MACE,OAAO,IAAI,CAACC,QAAQ,CAACU,GAAG,CAAC,WAAW,CAAC;IACvC,CAAC;;;;EACDD,sBAAIV,qCAAK;SAAT;MACE,OAAO,IAAI,CAACC,QAAQ,CAACU,GAAG,CAAC,OAAO,CAAC;IACnC,CAAC;;;;EAEDD,sBAAIV,oCAAI;SAAR;MACE,OAAO,IAAI,CAACC,QAAQ,CAACU,GAAG,CAAC,MAAM,CAAC;IAClC,CAAC;;;;EACDD,sBAAIV,uCAAO;SAAX;MACE,OAAO,IAAI,CAACC,QAAQ,CAACU,GAAG,CAAC,SAAS,CAAC;IACrC,CAAC;;;;EACDX,2CAAc,GAAd;IACE,IAAI,CAACY,IAAI,CAACT,IAAI,GAAG,IAAI,CAACA,IAAI,CAACU,KAAK;IAChC,IAAI,CAACD,IAAI,CAACN,SAAS,GAAG,IAAI,CAACA,SAAS,CAACO,KAAK;IAC1C,IAAI,CAACD,IAAI,CAACL,KAAK,GAAG,IAAI,CAACA,KAAK,CAACM,KAAK;IACnC;IACC,IAAI,CAACD,IAAI,CAACH,OAAO,GAAG,IAAI,CAACA,OAAO,CAACI,KAAK;IACtC,IAAI,CAACjB,WAAW,CAACkB,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC,cAAI;MACnDC,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EACDhB,uCAAU,GAAV;IACE,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,IAAI,CAACoB,KAAK,CAAC;MAC9Bd,IAAI,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAAC2B,QAAQ,CAAC;MAC/BZ,SAAS,EAAE,CAAC,EAAE,EAAEf,UAAU,CAAC2B,QAAQ,CAAC;MACpCX,KAAK,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAAC2B,QAAQ,CAAC;MAChCV,IAAI,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAAC2B,QAAQ,CAAC;MAC/BT,OAAO,EAAE,CAAC,EAAE,EAAElB,UAAU,CAAC2B,QAAQ;KAClC,CAAC;EACJ,CAAC;;;;;;;;;;;;EArDUlB,kBAAkB,eAL9BX,SAAS,CAAC;IACT8B,QAAQ,EAAE,gBAAgB;IAC1BC,8BAA0C;;GAE3C,CAAC,mCAM4B5B,MAAM,EAAuBC,yBAAyB,EAAgBH,WAAW,EAAuBI,WAAW,KALpIM,kBAAkB,CAsD9B;EAAD,yBAAC;CAAA,CA3DD;SAKaA,kBAAkB","names":["Component","FormBuilder","Validators","Router","HttpAdiministratorService","DataService","router","httpService","form","dataService","createForm","EditUsersComponent","editForm","controls","name","setValue","customer","last_name","phone","city","address","Object","get","user","value","updateUser","subscribe","alert","group","required","selector","template"],"sourceRoot":"","sources":["E:\\Programs\\SpringAngularProject\\angular7-springboot-crud-tutorial-master\\update-version\\angular7-spring-boot-master\\src\\app\\administrator\\layout-adiministrator\\users\\edit-users\\edit-users.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Customer} from '../../../../models/user';\nimport {Router} from '@angular/router';\nimport {HttpAdiministratorService} from '../../../../service/administrator/http-adiministrator.service';\nimport {DataService} from '../../../../service/data.service';\n\n@Component({\n  selector: 'app-edit-users',\n  templateUrl: './edit-users.component.html',\n  styleUrls: ['./edit-users.component.css']\n})\nexport class EditUsersComponent implements OnInit {\n  user: Customer;\n  editForm: FormGroup;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private router: Router, private httpService: HttpAdiministratorService, private form: FormBuilder, private dataService: DataService) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  //  console.log('user_account: ' + this.dataService.customer.name);\n    this.editForm.controls.name.setValue(this.dataService.customer.name);\n    this.editForm.controls.last_name.setValue(this.dataService.customer.last_name);\n    this.editForm.controls.phone.setValue(this.dataService.customer.phone);\n    this.editForm.controls.city.setValue(this.dataService.customer.city);\n    this.editForm.controls.address.setValue(this.dataService.customer.address);\n\n  }\n  get name() {\n    return this.editForm.get('name');\n  }\n\n  get last_name() {\n    return this.editForm.get('last_name');\n  }\n  get phone() {\n    return this.editForm.get('phone');\n  }\n\n  get city() {\n    return this.editForm.get('city');\n  }\n  get address() {\n    return this.editForm.get('address');\n  }\n  updateCustomer() {\n    this.user.name = this.name.value;\n    this.user.last_name = this.last_name.value;\n    this.user.phone = this.phone.value;\n   // this.user.city = this.name.value;\n    this.user.address = this.address.value;\n    this.httpService.updateUser(this.user).subscribe(data => {\n      alert('User updated successfully');\n    });\n  }\n  createForm() {\n    this.editForm = this.form.group({\n      name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      phone: ['', Validators.required],\n      city: ['', Validators.required],\n      address: ['', Validators.required],\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}