{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst accUrl = 'http://localhost:8082/account/';\nconst custUrl = 'http://localhost:8082/customer/';\nconst reqHeader = new HttpHeaders({\n  'Content-Type': 'application/json',\n  Authentication: 'Bearer ' + JSON.parse(localStorage.getItem('token'))\n});\nexport let HttpClientService = /*#__PURE__*/(() => {\n  class HttpClientService {\n    constructor(httpClient) {\n      _defineProperty(this, \"httpClient\", void 0);\n      _defineProperty(this, \"adminsubject\", void 0);\n      _defineProperty(this, \"admin\", void 0);\n      _defineProperty(this, \"customer\", void 0);\n      this.httpClient = httpClient;\n    }\n    get adminValue() {\n      return this.adminsubject.value;\n    }\n    // tslint:disable-next-line:variable-name\n    registerCustomer(customer) {\n      const url = 'http://localhost:8082/register';\n      // @ts-ignore\n      return this.httpClient.post(url, customer, {\n        responseType: 'text'\n      });\n    }\n    loginCustomer(username) {\n      const url = custUrl + username;\n      // @ts-ignore\n      return this.httpClient.get(url, {\n        headers: reqHeader\n      });\n    }\n    getCities() {\n      return this.httpClient.get('https://raw.githubusercontent.com/dbonev91/Bulgaria-Towns-JSON/master/towns.json');\n    }\n    findUsername(username) {\n      // const url = accUrl + username;\n      return this.httpClient.get(`${accUrl}?username=${username}`);\n    }\n    findEmail(email) {\n      const url = custUrl + 'email/' + email;\n      return this.httpClient.get(`${accUrl}?email=${email}`);\n    }\n    updateCustomer(customer) {\n      const url = custUrl + 'update';\n      // @ts-ignore\n      return this.httpClient.put(url, customer);\n    }\n    // tslint:disable-next-line:variable-name\n    getPackages(username) {\n      const url = custUrl + 'packages';\n      return this.httpClient.get(`${url}?username=${username}`);\n    }\n    forgotPassword(email) {\n      const url = 'http://localhost:8082/email/forgot/password';\n      return this.httpClient.get(`${url}?toEmailAddress=${email}`);\n    }\n    generateInvoice() {\n      const url = 'http://localhost:8082/invoice/generator';\n      this.httpClient.get(url, {\n        responseType: 'blob'\n      }).subscribe(response => {\n        saveAs(response, 'invoice.pdf');\n      });\n    }\n  }\n  _defineProperty(HttpClientService, \"\\u0275fac\", function HttpClientService_Factory(t) {\n    return new (t || HttpClientService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(HttpClientService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpClientService,\n    factory: HttpClientService.ɵfac,\n    providedIn: 'root'\n  }));\n  return HttpClientService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}