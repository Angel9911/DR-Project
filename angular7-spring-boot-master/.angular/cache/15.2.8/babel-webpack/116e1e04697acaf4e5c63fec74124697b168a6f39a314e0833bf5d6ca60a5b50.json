{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst customersUrl = 'http://localhost:8082/customers/';\nconst couriersUrl = 'http://localhost:8082/couriers/';\nconst adminUrl = 'http://localhost:8082/administrator/';\nconst reqHeader = new HttpHeaders({\n  'Content-Type': 'application/json'\n});\nexport let HttpAdiministratorService = /*#__PURE__*/(() => {\n  class HttpAdiministratorService {\n    constructor(http) {\n      _defineProperty(this, \"http\", void 0);\n      this.http = http;\n    }\n    getUsers() {\n      const url = adminUrl + 'customers';\n      return this.http.get(url, {\n        headers: reqHeader\n      });\n    }\n    getCouriers() {\n      const url = adminUrl + 'couriers';\n      return this.http.get(url, {\n        headers: reqHeader\n      });\n    }\n    loginAdministrator(username) {\n      console.log(JSON.parse(localStorage.getItem('token')));\n      const url = adminUrl + username;\n      // @ts-ignore\n      return this.http.get(url, {\n        headers: reqHeader\n      });\n    }\n    //  DO TUK V DOKUMENTACIQ\n    /* getUserById(id: number) {\r\n        return this.http.get(this.baseUrl + id);\r\n      } */\n    createCourier(coureir) {\n      const url = adminUrl + 'courier' + '/' + 'create';\n      return this.http.post(url, coureir, {\n        headers: reqHeader\n      });\n    }\n    updateCourier() {}\n    // tslint:disable-next-line:variable-name\n    deleteCourier(courier_id) {\n      const url = couriersUrl + 'delete' + '/' + courier_id;\n      return this.http.delete(url);\n    }\n    createUser(customer) {\n      // const url = 'http://localhost:8082/create/';\n      const url = adminUrl + 'customer' + '/' + 'create';\n      return this.http.post(url, customer, {\n        headers: reqHeader\n      });\n    }\n    updateUser(customer) {\n      const url = customersUrl + 'update';\n      return this.http.put(url, customer);\n    }\n    // tslint:disable-next-line:variable-name\n    deleteUser(user_id) {\n      const url = customersUrl + 'delete' + '/' + user_id;\n      return this.http.delete(url);\n    }\n    getAllTypes() {\n      const url = adminUrl + 'types';\n      return this.http.get(url, {\n        headers: reqHeader\n      });\n    }\n    registerPackage(packages) {\n      const url = adminUrl + 'package' + '/' + 'create';\n      return this.http.post(url, packages, {\n        headers: reqHeader\n      });\n    }\n    getAllPackages() {\n      const url = adminUrl + 'packages';\n      return this.http.get(url, {\n        headers: reqHeader\n      });\n    }\n  }\n  _defineProperty(HttpAdiministratorService, \"\\u0275fac\", function HttpAdiministratorService_Factory(t) {\n    return new (t || HttpAdiministratorService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(HttpAdiministratorService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpAdiministratorService,\n    factory: HttpAdiministratorService.ɵfac,\n    providedIn: 'root'\n  }));\n  return HttpAdiministratorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}