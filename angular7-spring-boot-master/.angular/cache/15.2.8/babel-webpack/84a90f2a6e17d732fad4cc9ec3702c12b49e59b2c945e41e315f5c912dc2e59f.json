{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClientService } from '../../../service/customer/http-client.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AlertServiceService } from '../../../service/alert-service.service';\nimport { Customer } from '../../../models/user';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { DataService } from '../../../service/data.service';\nimport { User_account } from '../../../models/user_account';\nimport { AuthService } from '../../../service/auth/auth.service';\nimport { GoogleLoginProvider, SocialAuthService } from '@abacritt/angularx-social-login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@abacritt/angularx-social-login\";\nimport * as i2 from \"../../../service/auth/auth.service\";\nimport * as i3 from \"../../../service/customer/http-client.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../service/alert-service.service\";\nimport * as i7 from \"../../../authentication/authentication.service\";\nimport * as i8 from \"../../../service/data.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../../../headers/header-login-user/header-login-user.component\";\nfunction LoginUserComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u0418\\u0437\\u0438\\u0441\\u043A\\u0432\\u0430 \\u0441\\u0435 \\u0432\\u044A\\u0432\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0438\\u043C\\u0435\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginUserComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, LoginUserComponent_div_15_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginform.controls[\"username\"].errors.required);\n  }\n}\nfunction LoginUserComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u0418\\u0437\\u0438\\u0441\\u043A\\u0432\\u0430 \\u0441\\u0435 \\u0432\\u044A\\u0432\\u0435\\u0436\\u0434\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginUserComponent_div_24_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430\\u0442\\u0430 \\u0442\\u0440\\u044F\\u0431\\u0432\\u0430 \\u0434\\u0430 \\u0431\\u044A\\u0434\\u0435 \\u043F\\u043E\\u043D\\u0435 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginUserComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, LoginUserComponent_div_24_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, LoginUserComponent_div_24_div_2_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginform.controls[\"password\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginform.controls[\"password\"].errors.minlength);\n  }\n}\nfunction LoginUserComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let LoginUserComponent /*extends UserDetails */ = /*#__PURE__*/(() => {\n  class LoginUserComponent /*extends UserDetails */ {\n    // tslint:disable-next-line:max-line-length\n    constructor(googleAuthService, auth, httpClientService, router, formBuilder, alertService, authservice, dataService) {\n      _defineProperty(this, \"googleAuthService\", void 0);\n      _defineProperty(this, \"auth\", void 0);\n      _defineProperty(this, \"httpClientService\", void 0);\n      _defineProperty(this, \"router\", void 0);\n      _defineProperty(this, \"formBuilder\", void 0);\n      _defineProperty(this, \"alertService\", void 0);\n      _defineProperty(this, \"authservice\", void 0);\n      _defineProperty(this, \"dataService\", void 0);\n      _defineProperty(this, \"resultObject\", new EventEmitter());\n      // for authenticate\n      _defineProperty(this, \"isLoggedin\", false);\n      _defineProperty(this, \"isLoginFailed\", false);\n      _defineProperty(this, \"isUsernameExist\", false);\n      _defineProperty(this, \"errorMessage\", '');\n      // @ts-ignore\n      _defineProperty(this, \"customer\", new Customer());\n      // tslint:disable-next-line:variable-name\n      _defineProperty(this, \"user_acc\", new User_account());\n      // @ts-ignore\n      _defineProperty(this, \"result\", new Customer());\n      // legit ot tuk nadolu\n      _defineProperty(this, \"loginform\", void 0);\n      _defineProperty(this, \"submitted\", void 0);\n      _defineProperty(this, \"loading\", void 0);\n      // tslint:disable-next-line:max-line-length\n      _defineProperty(this, \"paypal\", void 0);\n      this.googleAuthService = googleAuthService;\n      this.auth = auth;\n      this.httpClientService = httpClientService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.alertService = alertService;\n      this.authservice = authservice;\n      this.dataService = dataService;\n      /* if (this.authservice.loggedIn) {\r\n         this.router.navigate(['layout']);\r\n       }\r\n      this.googleAuthService.authState.subscribe((user: SocialUser) => {\r\n          console.log(user);\r\n      }) */\n      this.CreateLoginForm();\n    }\n    ngOnInit() {}\n    get username() {\n      return this.loginform.get('username');\n    }\n    get password() {\n      return this.loginform.get('password');\n    }\n    CreateLoginForm() {\n      this.loginform = this.formBuilder.group({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required, Validators.minLength(8)])\n      });\n    }\n    LoginUser(user) {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.loginform.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.user_acc.username = String(this.username.value);\n      this.user_acc.password = String(this.password.value);\n      this.customer.user_account = this.user_acc;\n      // console.log(this.customer.username + this.customer.password);\n      this.httpClientService.findUsername(this.customer.user_account.username).subscribe(data => {\n        // tslint:disable-next-line:triple-equals\n        if (data != false) {\n          this.isUsernameExist = true;\n        }\n      });\n      this.auth.authenticate(this.customer.user_account.username, this.customer.user_account.password).subscribe(data => {\n        this.isLoggedin = true;\n        // tslint:disable-next-line:no-shadowed-variable\n        this.httpClientService.loginCustomer(this.customer.user_account.username).subscribe(data => {\n          this.result = data;\n          this.dataService.customer = this.result;\n        });\n        this.router.navigate(['/customers/home']);\n      }, error => {\n        if (!this.isUsernameExist) {\n          console.log(this.isUsernameExist);\n          alert('Въвели сте грешно потребителско име.Моля опитайте отново');\n        } else if (error != null) {\n          alert('Въвели сте грешна парола.Моля опитайте отново');\n        }\n        console.log('test error: ' + error);\n        this.errorMessage = error;\n        this.isLoggedin = false;\n        this.isLoginFailed = true;\n      });\n      console.log('test-stest: ' + this.result);\n    }\n    loginWithGoogle() {\n      this.googleAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(x => console.log(x));\n    }\n  }\n  _defineProperty(LoginUserComponent /*extends UserDetails */, \"\\u0275fac\", function LoginUserComponent_Factory(t) {\n    return new (t || LoginUserComponent /*extends UserDetails */)(i0.ɵɵdirectiveInject(i1.SocialAuthService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.HttpClientService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.AlertServiceService), i0.ɵɵdirectiveInject(i7.AuthenticationService), i0.ɵɵdirectiveInject(i8.DataService));\n  });\n  _defineProperty(LoginUserComponent /*extends UserDetails */, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginUserComponent /*extends UserDetails */,\n    selectors: [[\"app-login-user\"]],\n    outputs: {\n      resultObject: \"resultObject\"\n    },\n    decls: 39,\n    vars: 13,\n    consts: [[1, \"card\", \"text-center\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"user\", \"\"], [1, \"row\", \"justify-content-center\"], [1, \"col-4\"], [1, \"card\", \"border-0\"], [1, \"card-body\", \"align-items-center\", \"d-flex\", \"justify-content-center\"], [1, \"form-group\", \"md-2\", \"col-xs-5\", \"col-lg-6\"], [\"for\", \"username\"], [\"type\", \"text\", \"placeholder\", \"\\u0412\\u044A\\u0432\\u0435\\u0434\\u0435\\u0442\\u0435 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0438\\u043C\\u0435\", \"formControlName\", \"username\", \"name\", \"username\", \"id\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"placeholder\", \"\\u0412\\u044A\\u0432\\u0435\\u0434\\u0435\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [1, \"fpass\"], [\"routerLink\", \"/customers/forgot-password\", 1, \"btn\", \"btn-link\", \"pr-0\"], [1, \"form-group\"], [1, \"btn\", \"primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/customers/register\", 1, \"nav-link\", \"registrationLink\"], [\"mat-raised-button\", \"\", 1, \"google-login-btn\", 3, \"click\"], [\"type\", \"icon\", \"size\", \"medium\", \"value\", \"google\", \"name\", \"google\", \"text\", \"google\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function LoginUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"app-header-login-user\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵtext(3, \" \\u0412\\u0445\\u043E\\u0434 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginUserComponent_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r7);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.LoginUser(_r0));\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n        i0.ɵɵtext(13, \"\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0438\\u043C\\u0435:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginUserComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.user_acc.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LoginUserComponent_div_15_Template, 2, 1, \"div\", 12);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 6)(18, \"div\", 7)(19, \"div\", 8)(20, \"div\", 9)(21, \"label\", 13);\n        i0.ɵɵtext(22, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginUserComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.user_acc.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, LoginUserComponent_div_24_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"a\", 16);\n        i0.ɵɵtext(27, \"\\u0417\\u0430\\u0431\\u0440\\u0430\\u0432\\u0435\\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 17)(29, \"button\", 18);\n        i0.ɵɵtemplate(30, LoginUserComponent_span_30_Template, 1, 0, \"span\", 19);\n        i0.ɵɵtext(31, \" \\u0412\\u043B\\u0435\\u0437 \\u0432 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u0430 \\u0441\\u0438 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"p\");\n        i0.ɵɵtext(33, \"\\u0410\\u043A\\u043E \\u043D\\u044F\\u043C\\u0430\\u0442\\u0435 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"a\", 20);\n        i0.ɵɵtext(35, \" \\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function LoginUserComponent_Template_button_click_36_listener() {\n          return ctx.loginWithGoogle();\n        });\n        i0.ɵɵtext(37, \" \\u0412\\u043B\\u0435\\u0437 \\u0441 \\u0442\\u0432\\u043E\\u044F Google \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"asl-google-signin-button\", 22);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.user_acc.username)(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.loginform.controls[\"username\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginform.controls[\"username\"].errors);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.user_acc.password)(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.loginform.controls[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.loginform.controls[\"password\"].errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i9.NgClass, i9.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i4.RouterLink, i5.FormGroupDirective, i5.FormControlName, i10.HeaderLoginUserComponent, i1.GoogleSigninButtonDirective],\n    styles: [\".google-login-btn[_ngcontent-%COMP%]{background-image:url(google_icon_button.png);background-repeat:no-repeat;background-size:20%;background-position:10%;padding-left:10%}.registrationLink[_ngcontent-%COMP%]{font-size:20px}.card-pos[_ngcontent-%COMP%]{text-align:right}.card-posit[_ngcontent-%COMP%]{float:right}\"]\n  }));\n  return LoginUserComponent /*extends UserDetails */;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}