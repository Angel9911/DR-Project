{"ast":null,"code":"import { __decorate, __metadata, __spreadArray } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./layout.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./layout.component.css?ngResource\";\nimport { Component, Inject, Renderer2 } from '@angular/core';\nimport { of } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { DecimalPipe, DOCUMENT } from '@angular/common';\nimport { HttpClientService } from '../../../service/customer/http-client.service';\nimport { DataService } from '../../../service/data.service';\nimport { User_account } from '../../../models/user_account';\nimport { PaymentServiceService } from '../../../service/payment-service.service';\nimport { PaymentOrder } from '../../../models/PaymentOrder';\nimport { ChatbotServiceService } from '../../../service/chatbot-service.service';\n// tslint:disable-next-line:prefer-const\nvar customerPackages;\n// tslint:disable-next-line:prefer-const\nfunction search(text, pipe) {\n  return customerPackages.filter(function (custPackage) {\n    console.log(custPackage);\n    var term = text.toLowerCase();\n    return custPackage.name_package.toLowerCase().includes(term) || custPackage.statusPackage.status_type.toLowerCase().includes(term) || custPackage.typePackage.type_name.toLowerCase().includes(term);\n  });\n}\nvar LayoutComponent = /** @class */function () {\n  // tslint:disable-next-line:max-line-length\n  function LayoutComponent(chatbotService, paymentService, renderer2, document, pipe, httpClientService, dataService) {\n    var _this = this;\n    this.chatbotService = chatbotService;\n    this.paymentService = paymentService;\n    this.renderer2 = renderer2;\n    this.document = document;\n    this.httpClientService = httpClientService;\n    this.dataService = dataService;\n    this.payppalIcon = '../../assets/images/paypal_logo.png';\n    this.product = new PaymentOrder();\n    this.userAcc = new User_account();\n    this.filter = new FormControl('');\n    this.username = sessionStorage.getItem('username');\n    console.log(this.username);\n    this.httpClientService.getPackages(this.username).subscribe(function (data) {\n      // @ts-ignore\n      customerPackages = __spreadArray([], data, true);\n      _this.sortedData = of(customerPackages);\n      // tslint:disable-next-line:only-arrow-functions\n      _this.packages$ = _this.filter.valueChanges.pipe(startWith(''), map(function (text) {\n        return search(text, pipe);\n      }));\n    });\n    this.product.customer_username = this.username;\n    this.product.package_name = 'Пералня';\n    // tslint:disable-next-line:no-unused-expression\n    this.product.package_type = 'Колет';\n    this.product.total_price = 133.00;\n    this.product.package_price = 123.00;\n    this.product.shipping = 5.00;\n    this.product.tax_price = 5.00;\n    /* this.paymentService.makePayment(this.product).toPromise().then(res => {\r\n      this.result = res;\r\n      paypalIframe.src = res;\r\n      paypalIframe.style.display = 'block';\r\n    }); */\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  LayoutComponent.prototype.ngAfterViewInit = function () {\n    /*payButton.addEventListener('click', function() {\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      this.paymentService.makePayment().toPromise().then(res => {\r\n        this.result = res;\r\n        console.log(this.result);\r\n        if (typeof this.result === 'string') {\r\n          paypalEndpoint = this.result;\r\n              }\r\n      });\r\n    }); */\n  };\n  LayoutComponent.prototype.ngOnInit = function () {};\n  LayoutComponent.prototype.makePayment = function () {\n    var _this = this;\n    var paypalIframe = document.getElementById('paypal-iframe');\n    this.paymentService.makePayment(this.product).toPromise().then(function (res) {\n      _this.result = res;\n      console.log(_this.result);\n      if (typeof _this.result === 'string') {\n        console.log(_this.result);\n        window.open(_this.result, '_blank', 'width=600, height=400');\n      }\n    });\n    /* const paypalIframe = document.getElementById('paypal-iframe') as HTMLIFrameElement;\r\n            this.paymentService.makePayment(this.product).toPromise().then(res => {\r\n       paypalIframe.src = res;\r\n       paypalIframe.style.display = 'block';\r\n       }); */\n  };\n\n  LayoutComponent.prototype.generateInvoice = function () {\n    this.httpClientService.generateInvoice();\n  };\n  LayoutComponent.prototype.sortData = function (sort) {\n    var _this = this;\n    var data = customerPackages.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = of(data);\n      return;\n    }\n    this.sortedData = of(data.sort(function (a, b) {\n      var isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name':\n          return _this.compare(a.name_package, b.name_package, isAsc);\n        case 'price':\n          return _this.compare(a.package_price, b.package_price, isAsc);\n        case 'total_price':\n          return _this.compare(a.total_cost, b.total_cost, isAsc);\n        default:\n          return 0;\n      }\n    }));\n    console.log(this.sortedData);\n  };\n  // @ts-ignore\n  LayoutComponent.prototype.compare = function (a, b, isAsc) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  };\n  LayoutComponent.prototype.getTotalPackagePrice = function () {\n    return customerPackages.map(function (t) {\n      return t.package_price;\n    }).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  };\n  LayoutComponent.prototype.getTotalCost = function () {\n    return customerPackages.map(function (t) {\n      return t.total_cost;\n    }).reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  };\n  LayoutComponent.ctorParameters = function () {\n    return [{\n      type: ChatbotServiceService\n    }, {\n      type: PaymentServiceService\n    }, {\n      type: Renderer2\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: DecimalPipe\n    }, {\n      type: HttpClientService\n    }, {\n      type: DataService\n    }];\n  };\n  LayoutComponent = __decorate([Component({\n    // selector: 'app-header-layout-user',\n    template: __NG_CLI_RESOURCE__0,\n    styles: [__NG_CLI_RESOURCE__1]\n  }), __metadata(\"design:paramtypes\", [ChatbotServiceService, PaymentServiceService, Renderer2, Document, DecimalPipe, HttpClientService, DataService])], LayoutComponent);\n  return LayoutComponent;\n}();\nexport { LayoutComponent };","map":{"version":3,"mappings":"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","names":["Component","Inject","Renderer2","of","FormControl","map","startWith","DecimalPipe","DOCUMENT","HttpClientService","DataService","User_account","PaymentServiceService","PaymentOrder","ChatbotServiceService","customerPackages","search","text","pipe","filter","console","log","custPackage","term","toLowerCase","name_package","includes","statusPackage","status_type","typePackage","type_name","chatbotService","paymentService","renderer2","document","httpClientService","dataService","username","sessionStorage","getItem","getPackages","subscribe","data","_this","sortedData","packages$","valueChanges","product","customer_username","package_name","package_type","total_price","package_price","shipping","tax_price","LayoutComponent","paypalIframe","getElementById","makePayment","toPromise","then","result","res","window","open","generateInvoice","sort","slice","active","direction","a","b","isAsc","compare","total_cost","reduce","args","template","Document"],"sourceRoot":"","sources":["E:\\Programs\\SpringAngularProject\\angular7-springboot-crud-tutorial-master\\update-version\\angular7-spring-boot-master\\src\\app\\customers\\layout-user\\layout\\layout.component.ts"],"sourcesContent":["import {AfterViewInit, Component, Inject, OnInit, PipeTransform, Renderer2} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport {DecimalPipe, DOCUMENT} from '@angular/common';\nimport {HttpClientService} from '../../../service/customer/http-client.service';\nimport {DataService} from '../../../service/data.service';\nimport {Packages} from '../../../models/Packages';\nimport {User_account} from '../../../models/user_account';\nimport {Sort} from '@angular/material';\nimport {PaymentServiceService} from '../../../service/payment-service.service';\nimport {PaymentOrder} from '../../../models/PaymentOrder';\nimport {ChatbotServiceService} from '../../../service/chatbot-service.service';\n// tslint:disable-next-line:prefer-const\nlet customerPackages: Packages[];\n// tslint:disable-next-line:prefer-const\n\n\nfunction search(text: string, pipe: PipeTransform): Packages[] {\n  return customerPackages.filter(custPackage => {\n    console.log(custPackage);\n    const term = text.toLowerCase();\n    return custPackage.name_package.toLowerCase().includes(term)\n      || custPackage.statusPackage.status_type.toLowerCase().includes(term)\n      || custPackage.typePackage.type_name.toLowerCase().includes(term);\n  });\n}\n\n@Component({\n  // selector: 'app-header-layout-user',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit, AfterViewInit {\n  payppalIcon = '../../assets/images/paypal_logo.png';\n  script: HTMLScriptElement;\n  // tslint:disable-next-line:ban-types\n  result: Object;\n  product = new PaymentOrder();\n\n  packages$: Observable<Packages[]>;\n  sortedData: Observable<Packages[]>;\n  username: string;\n  userAcc = new User_account();\n  filter = new FormControl('');\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private chatbotService: ChatbotServiceService, private paymentService: PaymentServiceService, private renderer2: Renderer2, @Inject(DOCUMENT) private document: Document, pipe: DecimalPipe, private httpClientService: HttpClientService, private dataService: DataService) {\n     this.username = sessionStorage.getItem('username');\n     console.log(this.username);\n     this.httpClientService.getPackages(this.username).subscribe(data => {\n      // @ts-ignore\n      customerPackages = [...data];\n      this.sortedData = of(customerPackages);\n      // tslint:disable-next-line:only-arrow-functions\n      this.packages$ = this.filter.valueChanges.pipe(\n        startWith(''),\n        map(text => search(text, pipe))\n      );\n    });\n\n     this.product.customer_username = this.username;\n     this.product.package_name = 'Пералня';\n    // tslint:disable-next-line:no-unused-expression\n     this.product.package_type = 'Колет';\n     this.product.total_price = 133.00;\n     this.product.package_price = 123.00;\n     this.product.shipping = 5.00;\n     this.product.tax_price = 5.00;\n\n    /* this.paymentService.makePayment(this.product).toPromise().then(res => {\n      this.result = res;\n      paypalIframe.src = res;\n      paypalIframe.style.display = 'block';\n    }); */\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    /*payButton.addEventListener('click', function() {\n      // tslint:disable-next-line:no-shadowed-variable\n      this.paymentService.makePayment().toPromise().then(res => {\n        this.result = res;\n        console.log(this.result);\n        if (typeof this.result === 'string') {\n          paypalEndpoint = this.result;\n\n        }\n      });\n    }); */\n  }\n\n  ngOnInit() {\n\n  }\n\n  makePayment() {\n    const paypalIframe = document.getElementById('paypal-iframe') as HTMLIFrameElement;\n\n    this.paymentService.makePayment(this.product).toPromise().then(res => {\n      this.result = res;\n      console.log(this.result);\n      if (typeof this.result === 'string') {\n        console.log(this.result);\n        window.open(this.result, '_blank', 'width=600, height=400');\n      }\n    });\n   /* const paypalIframe = document.getElementById('paypal-iframe') as HTMLIFrameElement;\n\n    this.paymentService.makePayment(this.product).toPromise().then(res => {\n      paypalIframe.src = res;\n      paypalIframe.style.display = 'block';\n      }); */\n\n  }\n\n  generateInvoice() {\n    this.httpClientService.generateInvoice();\n  }\n  sortData(sort: Sort) {\n    const data = customerPackages.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = of(data);\n      return;\n    }\n\n    this.sortedData = of(data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name':\n          return this.compare(a.name_package, b.name_package, isAsc);\n        case 'price':\n          return this.compare(a.package_price, b.package_price, isAsc);\n        case 'total_price':\n          return this.compare(a.total_cost, b.total_cost, isAsc);\n        default:\n          return 0;\n      }\n    }));\n    console.log(this.sortedData);\n  }\n\n// @ts-ignore\n  compare(a: number | string, b: number | string, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n\n  getTotalPackagePrice() {\n    return customerPackages.map(t => t.package_price).reduce((a, b) => a + b, 0);\n  }\n\n  getTotalCost() {\n    return customerPackages.map(t => t.total_cost).reduce((a, b) => a + b, 0);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}