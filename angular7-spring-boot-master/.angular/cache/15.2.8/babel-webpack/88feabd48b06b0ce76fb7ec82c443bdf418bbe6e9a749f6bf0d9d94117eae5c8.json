{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8082/courier/';\nconst reqHeader = new HttpHeaders({\n  'Content-Type': 'application/json',\n  Authentication: 'Bearer ' + JSON.parse(localStorage.getItem('token'))\n});\nexport let HttpCourierService = /*#__PURE__*/(() => {\n  class HttpCourierService {\n    constructor(httpClient) {\n      _defineProperty(this, \"httpClient\", void 0);\n      this.httpClient = httpClient;\n    }\n    loginCourier(username) {\n      const url = 'http://localhost:8082/courier';\n      return this.httpClient.get(`${url}?username=${username}`, {\n        headers: reqHeader\n      });\n    }\n    getPackages(username) {\n      const url = baseUrl + 'packages';\n      return this.httpClient.get(`${url}?username=${username}`, {\n        headers: reqHeader\n      });\n    }\n    getProblemPackages(username) {\n      const url = baseUrl + 'packages' + '/' + 'problem';\n      return this.httpClient.get(`${url}?username=${username}`, {\n        headers: reqHeader\n      });\n    }\n    getDeliveredPackages(username) {\n      const url = baseUrl + 'packages' + '/' + 'delivered';\n      return this.httpClient.get(`${url}?username=${username}`, {\n        headers: reqHeader\n      });\n    }\n    updateProblemPackage(statusType, packageId, message, imgFile) {\n      const url = baseUrl + 'package' + '/' + 'problem' + '/' + 'update';\n      console.log(imgFile);\n      // tslint:disable-next-line:max-line-length\n      return this.httpClient.post(`${url}?packageId=${packageId}&status=${statusType}&message=${message}`, {\n        file: imgFile\n      }, {\n        headers: reqHeader\n      });\n    }\n    updatePackageSuccessfull(statusType, packageId) {\n      const url = baseUrl + 'package' + '/' + 'update';\n      return this.httpClient.put(`${url}?packageId=${packageId}&status=${statusType}`, {\n        headers: reqHeader\n      });\n    }\n  }\n  _defineProperty(HttpCourierService, \"\\u0275fac\", function HttpCourierService_Factory(t) {\n    return new (t || HttpCourierService)(i0.ɵɵinject(i1.HttpClient));\n  });\n  _defineProperty(HttpCourierService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpCourierService,\n    factory: HttpCourierService.ɵfac,\n    providedIn: 'root'\n  }));\n  return HttpCourierService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}