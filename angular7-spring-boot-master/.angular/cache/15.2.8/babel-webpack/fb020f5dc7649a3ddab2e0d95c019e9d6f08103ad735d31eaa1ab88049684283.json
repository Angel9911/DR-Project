{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./contacts.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./contacts.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { HttpClientService } from '../service/customer/http-client.service';\nimport { DataService } from '../service/data.service';\nimport { AlertServiceService } from '../service/alert-service.service';\nvar ContactsComponent = /** @class */function () {\n  // tslint:disable-next-line:max-line-length\n  function ContactsComponent(form, httpClientService, dataService, alertService) {\n    this.form = form;\n    this.httpClientService = httpClientService;\n    this.dataService = dataService;\n    this.alertService = alertService;\n    this.EmailSrc = 'assets/images/email.png';\n    this.EmailAlt = 'email';\n    this.PhoneSrc = 'assets/images/phone_con.png';\n    this.PhoneAlt = 'phone_con';\n    this.LocationSrc = 'assets/images/location.png';\n    this.LocationAlt = 'location';\n    this.createForm();\n  }\n  ContactsComponent.prototype.ngOnInit = function () {\n    var names = this.dataService.customer.name + ' ' + this.dataService.customer.last_name;\n    this.contactForm.controls.name.setValue(names);\n    this.contactForm.controls.email.setValue(this.dataService.customer.email);\n  };\n  Object.defineProperty(ContactsComponent.prototype, \"email\", {\n    get: function () {\n      return this.contactForm.get('email');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ContactsComponent.prototype, \"message\", {\n    get: function () {\n      return this.contactForm.get('message');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ContactsComponent.prototype.sendMessage = function () {\n    this.submitted = true;\n    // this.alertService.clear();\n    if (this.contactForm.invalid) {\n      return;\n    }\n    console.log(name);\n    // this.httpClientService.\n    // this.loading=true;\n  };\n\n  ContactsComponent.prototype.createForm = function () {\n    // @ts-ignore\n    this.contactForm = this.form.group({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required]),\n      message: new FormControl('', [Validators.required])\n    });\n  };\n  ContactsComponent.ctorParameters = function () {\n    return [{\n      type: FormBuilder\n    }, {\n      type: HttpClientService\n    }, {\n      type: DataService\n    }, {\n      type: AlertServiceService\n    }];\n  };\n  ContactsComponent = __decorate([Component({\n    selector: 'app-contacts',\n    template: __NG_CLI_RESOURCE__0,\n    styles: [__NG_CLI_RESOURCE__1]\n  }), __metadata(\"design:paramtypes\", [FormBuilder, HttpClientService, DataService, AlertServiceService])], ContactsComponent);\n  return ContactsComponent;\n}();\nexport { ContactsComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAQC,WAAW,EAAEC,WAAW,EAAaC,UAAU,QAAO,gBAAgB;AAC9E,SAAQC,iBAAiB,QAAO,yCAAyC;AACzE,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAAQC,mBAAmB,QAAO,kCAAkC;AAQpE;EAYE;EACA,2BAAoBC,IAAiB,EAAUC,iBAAoC,EAAUC,WAAwB,EAAUC,YAAiC;IAA5I,SAAI,GAAJH,IAAI;IAAuB,sBAAiB,GAAjBC,iBAAiB;IAA6B,gBAAW,GAAXC,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAZ3I,aAAQ,GAAG,yBAAyB;IACpC,aAAQ,GAAG,OAAO;IAClB,aAAQ,GAAG,6BAA6B;IACxC,aAAQ,GAAG,WAAW;IACtB,gBAAW,GAAG,4BAA4B;IAC1C,gBAAW,GAAG,UAAU;IAQtB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,oCAAQ,GAAR;IACE,IAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAACC,IAAI,GAAG,GAAG,GAAG,IAAI,CAACN,WAAW,CAACK,QAAQ,CAACE,SAAS;IACxF,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACH,IAAI,CAACI,QAAQ,CAACN,KAAK,CAAC;IAC9C,IAAI,CAACI,WAAW,CAACC,QAAQ,CAACE,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACV,WAAW,CAACK,QAAQ,CAACM,KAAK,CAAC;EAC3E,CAAC;EAEDC,sBAAIT,oCAAK;SAAT;MACE,OAAO,IAAI,CAACK,WAAW,CAACK,GAAG,CAAC,OAAO,CAAC;IACtC,CAAC;;;;EAEDD,sBAAIT,sCAAO;SAAX;MACE,OAAO,IAAI,CAACK,WAAW,CAACK,GAAG,CAAC,SAAS,CAAC;IACxC,CAAC;;;;EACDV,uCAAW,GAAX;IACE,IAAI,CAACW,SAAS,GAAG,IAAI;IACtB;IACC,IAAI,IAAI,CAACN,WAAW,CAACO,OAAO,EAAE;MAC5B;;IAEFC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;IACjB;IACA;EACF,CAAC;;EACDH,sCAAU,GAAV;IACE;IACA,IAAI,CAACK,WAAW,GAAG,IAAI,CAACV,IAAI,CAACoB,KAAK,CAAC;MACjCZ,IAAI,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,CAAC,CAAC;MAChDR,KAAK,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,CAAC,CAAC;MACjDC,OAAO,EAAE,IAAI3B,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyB,QAAQ,CAAC;KACnD,CAAC;EACJ,CAAC;;;;;;;;;;;;EA/CUhB,iBAAiB,eAL7BZ,SAAS,CAAC;IACT8B,QAAQ,EAAE,cAAc;IACxBC,8BAAwC;;GAEzC,CAAC,mCAc0B9B,WAAW,EAA6BG,iBAAiB,EAAuBC,WAAW,EAAwBC,mBAAmB,KAbrJM,iBAAiB,CAgD7B;EAAD,wBAAC;CAAA,CArDD;SAKaA,iBAAiB","names":["Component","FormBuilder","FormControl","Validators","HttpClientService","DataService","AlertServiceService","form","httpClientService","dataService","alertService","createForm","ContactsComponent","names","customer","name","last_name","contactForm","controls","setValue","email","Object","get","submitted","invalid","console","log","group","required","message","selector","template"],"sourceRoot":"","sources":["E:\\Programs\\SpringAngularProject\\angular7-springboot-crud-tutorial-master\\update-version\\angular7-spring-boot-master\\src\\app\\contacts\\contacts.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HttpClientService} from '../service/customer/http-client.service';\nimport {DataService} from '../service/data.service';\nimport {AlertServiceService} from '../service/alert-service.service';\nimport {Email} from '../models/Email';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  EmailSrc = 'assets/images/email.png';\n  EmailAlt = 'email';\n  PhoneSrc = 'assets/images/phone_con.png';\n  PhoneAlt = 'phone_con';\n  LocationSrc = 'assets/images/location.png';\n  LocationAlt = 'location';\n  contactForm: FormGroup;\n  // email = new Email();\n  submitted: boolean;\n  loading: boolean;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private form: FormBuilder, private httpClientService: HttpClientService, private dataService: DataService, private alertService: AlertServiceService) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    const names = this.dataService.customer.name + ' ' + this.dataService.customer.last_name;\n    this.contactForm.controls.name.setValue(names);\n    this.contactForm.controls.email.setValue(this.dataService.customer.email);\n  }\n\n  get email() {\n    return this.contactForm.get('email');\n  }\n\n  get message() {\n    return this.contactForm.get('message');\n  }\n  sendMessage() {\n    this.submitted = true;\n   // this.alertService.clear();\n    if (this.contactForm.invalid) {\n      return;\n    }\n    console.log(name);\n    // this.httpClientService.\n    // this.loading=true;\n  }\n  createForm() {\n    // @ts-ignore\n    this.contactForm = this.form.group({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required]),\n      message: new FormControl('', [Validators.required]),\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}