{"ast":null,"code":"import _defineProperty from \"E:/Programs/SpringAngularProject/angular7-springboot-crud-tutorial-master/update-version/angular7-spring-boot-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpCourierService } from '../../../service/courier/http-courier.service';\nimport { Courier } from '../../../models/Courier';\nimport { User_account } from '../../../models/user_account';\nimport { DataService } from '../../../service/data.service';\nimport { AuthService } from '../../../service/auth/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../service/courier/http-courier.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../service/data.service\";\nimport * as i5 from \"../../../service/auth/auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../headers/header-login-courier/header-login-courier.component\";\nfunction LoginCourierComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginCourierComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginCourierComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\");\n    i0.ɵɵtext(2, \"Invalid credentials.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n// @ts-ignore\nexport let LoginCourierComponent /*extends UserDetails*/ = /*#__PURE__*/(() => {\n  class LoginCourierComponent /*extends UserDetails*/ {\n    // tslint:disable-next-line:max-line-length\n    constructor(form, httpService, router, dataService, auth) {\n      _defineProperty(this, \"form\", void 0);\n      _defineProperty(this, \"httpService\", void 0);\n      _defineProperty(this, \"router\", void 0);\n      _defineProperty(this, \"dataService\", void 0);\n      _defineProperty(this, \"auth\", void 0);\n      _defineProperty(this, \"loginCourierForm\", void 0);\n      _defineProperty(this, \"invalidLogin\", false);\n      _defineProperty(this, \"isLoggedin\", false);\n      _defineProperty(this, \"isLoginFailed\", false);\n      _defineProperty(this, \"errorMessage\", '');\n      // tslint:disable-next-line:variable-name\n      _defineProperty(this, \"courier_account\", new User_account());\n      _defineProperty(this, \"result\", new Courier());\n      this.form = form;\n      this.httpService = httpService;\n      this.router = router;\n      this.dataService = dataService;\n      this.auth = auth;\n      this.createForm();\n      // this.createUserForm();\n    }\n\n    ngOnInit() {}\n    /* get username() {\r\n       return this.loginCourierForm.get('username');\r\n     }\r\n    \n     get password() {\r\n       return this.loginCourierForm.get('password');\r\n     } */\n    LoginCourier() {\n      if (this.loginCourierForm.invalid) {\n        return;\n      }\n      // console.log(this.username.value + this.password.value);\n      console.log(this.courier_account.username);\n      this.auth.authenticate(this.courier_account.username, this.courier_account.password).subscribe(data => {\n        this.isLoggedin = true;\n        // tslint:disable-next-line:no-shadowed-variable\n        this.httpService.loginCourier(this.courier_account.username).subscribe(data => {\n          this.result = data;\n          this.dataService.courier = this.result;\n        });\n        this.router.navigate(['/courier/home']);\n      }, error => {\n        console.log(error);\n        this.errorMessage = error;\n        this.isLoggedin = false;\n        this.isLoginFailed = true;\n      });\n      /* this.httpService.loginCourier(this.courier_account.username, this.courier_account.password).subscribe(data => {\r\n        this.result = data;\r\n        if (this.result != null) {\r\n          this.router.navigate(['/courier/home']);\r\n        } else {\r\n          this.invalidLogin = true;\r\n          alert('error');\r\n        }\r\n      }); */\n    }\n\n    createForm() {\n      this.loginCourierForm = this.form.group({\n        username: ['', Validators.compose([Validators.required])],\n        password: ['', Validators.required]\n      });\n    }\n  }\n  _defineProperty(LoginCourierComponent /*extends UserDetails*/, \"\\u0275fac\", function LoginCourierComponent_Factory(t) {\n    return new (t || LoginCourierComponent /*extends UserDetails*/)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpCourierService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DataService), i0.ɵɵdirectiveInject(i5.AuthService));\n  });\n  _defineProperty(LoginCourierComponent /*extends UserDetails*/, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginCourierComponent /*extends UserDetails*/,\n    selectors: [[\"app-login-courier\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"row\"], [1, \"col-md-6\", \"login-container\"], [2, \"margin\", \"auto\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", \"id\", \"username\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"pwd\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"error\"]],\n    template: function LoginCourierComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header-login-courier\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\", 2);\n        i0.ɵɵtext(4, \"Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginCourierComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.LoginCourier();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginCourierComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.courier_account.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginCourierComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginCourierComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.courier_account.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LoginCourierComponent_div_15_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 10);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, LoginCourierComponent_div_18_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginCourierForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.courier_account.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginCourierForm.controls[\"username\"].hasError(\"required\") && ctx.loginCourierForm.controls[\"username\"].touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.courier_account.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginCourierForm.controls[\"password\"].hasError(\"required\") && ctx.loginCourierForm.controls[\"password\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginCourierForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n      }\n    },\n    dependencies: [i6.NgIf, i7.HeaderLoginCourierComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  }));\n  return LoginCourierComponent /*extends UserDetails*/;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}