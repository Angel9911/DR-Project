{"ast":null,"code":"import { ChatbotServiceService } from '../service/chatbot-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/chatbot-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"bot-message\": a1\n  };\n};\nfunction ChatbotComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, message_r2.isUserMessage, !message_r2.isUserMessage));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r2.text);\n  }\n}\nfunction ChatbotComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h2\");\n    i0.ɵɵtext(3, \"Chatbot\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.closeChatbot());\n    });\n    i0.ɵɵtext(5, \"Close\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 4);\n    i0.ɵɵtemplate(7, ChatbotComponent_div_0_div_7_Template, 3, 5, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatbotComponent_div_0_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.userInput = $event);\n    })(\"keydown.enter\", function ChatbotComponent_div_0_Template_input_keydown_enter_9_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.sendMessage());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_div_0_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.sendMessage());\n    });\n    i0.ɵɵtext(11, \"Send\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userInput);\n  }\n}\nexport let ChatbotComponent = /*#__PURE__*/(() => {\n  class ChatbotComponent {\n    constructor(chatbotService) {\n      this.chatbotService = chatbotService;\n      this.messages = [];\n      this.showChatbot = true;\n    }\n    ngOnInit() {\n      console.log('test');\n      this.chatbotService.getSessionId().subscribe(res => {\n        console.log(res);\n        this.sessionId = res;\n      });\n      // const d = JSON.stringify(this.chatbotService.getSessionId());\n      // console.log(d);\n    }\n\n    openChatbot() {\n      this.showChatbot = true;\n    }\n    closeChatbot() {\n      this.showChatbot = false;\n      this.messages = [];\n      this.userInput = '';\n    }\n    sendMessage() {\n      if (this.userInput.trim() === '') {\n        return;\n      }\n      this.messages.push({\n        text: this.userInput,\n        isUserMessage: true\n      });\n      // this.messages.push({ text: this.userInput, isUserMessage: true });\n      // Send user input to Spring Boot backend\n      // @ts-ignore\n      this.chatbotService.sendMessage(this.userInput, this.sessionId).subscribe(res => {\n        const message = res.message;\n        this.messages.push({\n          text: message,\n          isUserMessage: false\n        });\n      }, error => {\n        console.error('Error:', error);\n        // Display a user-friendly error message\n        // or handle the error in some other way\n      });\n    }\n  }\n\n  ChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) {\n    return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ChatbotServiceService));\n  };\n  ChatbotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatbotComponent,\n    selectors: [[\"app-chatbot\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"chatbot-container\", 4, \"ngIf\"], [1, \"chatbot-container\"], [1, \"chatbot-header\"], [3, \"click\"], [1, \"chatbot-messages\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"chatbot-input\"], [\"type\", \"text\", \"placeholder\", \"Type your message...\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [1, \"message\"], [3, \"ngClass\"]],\n    template: function ChatbotComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChatbotComponent_div_0_Template, 12, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatbot);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".chatbot-container[_ngcontent-%COMP%]{position:fixed;bottom:20px;right:20px;width:300px;border:1px solid #ccc;background-color:#fff;box-shadow:0 0 10px #0000001a;z-index:9999}.chatbot-header[_ngcontent-%COMP%]{padding:10px;background-color:#f2f2f2}.chatbot-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0;font-size:18px}.chatbot-messages[_ngcontent-%COMP%]{padding:10px;max-height:200px;overflow-y:auto}.message[_ngcontent-%COMP%]{margin-bottom:5px}.user-message[_ngcontent-%COMP%]{text-align:right}.bot-message[_ngcontent-%COMP%]{text-align:left}.chatbot-input[_ngcontent-%COMP%]{padding:10px;background-color:#f2f2f2;display:flex}.chatbot-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex-grow:1;margin-right:10px;border:none;outline:none;padding:5px}.chatbot-input[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;background-color:#007bff;color:#fff;padding:5px 10px;cursor:pointer}\"]\n  });\n  return ChatbotComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}